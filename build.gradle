plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.sonarqube' version '3.5.0.2730'
    id 'io.freefair.lombok' version '6.6.1'
}

group = 'ch.uzh.ifi'
version = '0.0.2'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.security:spring-security-data:6.0.1'
    implementation 'org.springframework.security:spring-security-oauth2-jose:6.0.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
    implementation 'org.springdoc:springdoc-openapi-security:1.6.14'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.modelmapper:modelmapper:3.1.1'
    implementation 'org.apache.commons:commons-text:1.10.0'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.keycloak:keycloak-admin-client:20.0.3'
    implementation 'com.github.docker-java:docker-java:3.2.14'
    implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.2.14'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:6.3.0.202209071007-r'
    implementation 'org.apache.tika:tika-core:2.7.0'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
}

sonarqube {
    properties {
        property 'sonar.projectKey', 'mp-access_Backend'
        property 'sonar.organization', 'access'
        property 'sonar.host.url', 'https://sonarcloud.io'
    }
}

/**
 * Build and push a Docker image of the backend to DockerHub via the built-in gradle task.
 * Requires passing 2 environment variables:
 * (1) username     - username to utilize for logging into DockerHub
 * (2) password     - password to utilize for logging into DockerHub
 * These are already defined in the deployment environment (as GitHub Actions secrets).
 * For usage see the deployment script under .github/workflows/backend.yml.
 */
bootBuildImage {
    if (project.hasProperty('username')) {
        imageName = 'sealuzh/access-backend:x'
        publish = true
        docker.publishRegistry.username = project.property('username')
        docker.publishRegistry.password = project.property('password')
    }
}